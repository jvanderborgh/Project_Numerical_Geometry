void HilbertCoord (double x, double y, double x0, double y0, double xR, double yR, double xB, double yB, int d, int bits []){
	for (int i=0; i<d; i++){
	double coordR = (x-x0) * xR + (y-y0) * yR;
	double coordB = (x-x0) * xB + (y-y0) * yB;
	xR/=2; yR/=2; xB/=2; yB/=2; 
	if ( coordR <= 0 && coordB <= 0){//quadrant 0
	x0 -= (xB+xR); y0 -= (yB+yR);
	swap (xR, xB); swap (yR, yB);
	bits[i] = 0;
	}
	else if ( coordR <= 0 && coordB >= 0){//quadrant 1 
	x0 += (xB-xR); y0 += (yB-yR);
	bits[i] = 1;
	}
	else if ( coordR >= 0 && coordB >= 0){//quadrant 2
	x0 += (xB+xR); y0 += (yB+yR);
	bits[i] = 2;
	}
	else if( coordR >= 0 && coordB <= 0){//quadrant 3
	x0 += (-xB+xR); y0 += (-yB+yR);
	swap (xR, xB); swap (yR, yB);
	xB=-xB; yB=-yB;
	xR=-xR; yR=-yR;
	bits[i] = 3;
	}
	}
}